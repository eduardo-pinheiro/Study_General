// Box-sizing
*, *::after, *::before {
	box-sizing: border-box;
}

// Função do grid

@function grid($col, $offset: false) {
	$width: $col / $cols * 100 + '%';
	$result: calc(#{$width} - #{$gutter});
	@if $offset == offset {
		$gutter: $gutter / 2;
		$result: calc(#{$width} + #{$gutter});
	}
	@return $result;
}

// Gera as classes de grid

@for $i from 1 through $cols {
	.col-#{$i} {
		width: grid($i);
	}
}

// Mixin estrutura do grid

@mixin grid-structure {
	float: left;
	min-height: 1px;
	margin-left: $gutter / 2;
	margin-right: $gutter / 2;
	@include device(tablet) {
		width: 100%;
		float: none;
		margin-left: 0px;
		margin-right: 0px;
	}
}

[class^="col-"] {
	@include grid-structure;
}

// Gera as classes de offset

@for $i from 1 through $cols {
	.offset-#{$i} {
		margin-left: grid($i, offset);
		@extend %offset;
	}
}

@include device(mobile) {
	%offset {
		margin-left: 0px;
	}
}

// Mixin de clearfix

@mixin clearfix {
	&::after, &::before {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin container {
	max-width: $container;
	margin: 0px auto;
	position: relative;
	padding-left: 35px;
	padding-right: 35px;
	
	@include device(highDesktop){
		padding: 0!important;
	}
	@include device(desktop){		
		padding-left: 20px!important;
		padding-right: 20px!important;
		width: calc( 100vw - 30px);
    	margin-left: 15px;
	}
	@include device(tablet){
		padding-left: 8px!important;
		padding-right: 8px!important;
	}
	@include clearfix;
}

.container {
	@include container;
}

@mixin row {
	position: relative;
	width: 100%;
	@include clearfix;
}

.row {
	@include row;
}